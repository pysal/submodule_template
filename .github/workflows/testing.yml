# Continuous Integration for PACKAGE_NAME
#
# Notes:
#   - `timeout-minutes` may need to be updated depanding on how long the tests should take.
#   - Additional environments can be defined in the ./ci/ directory and added to the `environment-file` list.
#   - Swap PACKAGE_NAME for the actual package name.
#   - Codecov must be enabled for the repo.
#   - Within the project repo, navigate to Setting/Secrets to set `secrets.CODECOV_TOKEN`.
#   - Uncomment evertything below the following line to enable the workflow.
#---------------------------------------------------------------------------

#name: Continuous Integration

#on:
#  push:
#    branches:
#    - '*'
#  pull_request:
#    branches:
#    - '*'
#  schedule:
#    - cron: '59 11 * * *'
#  workflow_dispatch:
#    inputs:
#      version:
#        description: Manual Unittest Run
#        default: test
#        required: false
#
#jobs:
#  linting:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#      - uses: pre-commit/action@v3.0.0

#  testing:
#    needs: linting
#    env:
#      RUN_TEST: pytest PACKAGE_NAME -v -r a -n auto --cov PACKAGE_NAME --doctest-modules --cov-config .coveragerc --cov-report xml --color yes --cov-append --cov-report term-missing
#    name: conda (${{ matrix.os }}, ${{ matrix.environment-file }})
#    runs-on: ${{ matrix.os }}
#    timeout-minutes: 30
#    strategy:
#      matrix:
#        os: [ubuntu-latest]
#        environment-file:
#          - ci/38.yaml
#          - ci/39.yaml
#          - ci/310.yaml
#          - ci/310.yaml
#          - ci/311.yaml
#        include:
#          - environment-file: ci/311.yaml
#            os: macos-latest
#          - environment-file: ci/311.yaml
#            os: windows-latest
#      fail-fast: false
#    steps:
#      - name: checkout repo
#        uses: actions/checkout@v3
#
#      - name: setup micromamba
#        uses: mamba-org/provision-with-micromamba@main
#        with:
#          environment-file: ${{ matrix.environment-file }}
#          micromamba-version: 'latest'
#          channel-priority: 'flexible'
#
#      - name: environment info
#        shell: bash -l {0}
#        run: |
#          micromamba info
#          micromamba list
#
#      - name: spatial versions (if geopandas is installed)
#        shell: bash -l {0}
#        run: 'python -c "import geopandas; geopandas.show_versions();"'
#
#      - name: run tests - bash
#        shell: bash -l {0}
#        run: ${{ env.RUN_TEST }}
#        if: matrix.os != 'windows-latest'
#
#      - name: run tests - powershell
#        shell: powershell
#        run: ${{ env.RUN_TEST }}
#        if: matrix.os == 'windows-latest'
#
#      - name: codecov
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          file: ./coverage.xml
#          name: PACKAGE_NAME-codecov
